---
- hosts: lower_mesosphere
  user: admin
  sudo: yes

  vars_files:
    - "../variables.yml"

  tasks:
    - name: Apt repository for kernel update is set
      apt_repository:
        repo="deb http://http.debian.net/debian wheezy-backports main"
        state=present
        update-cache=yes

    - name: Docker-ready kernel is installed
      apt:
        pkg="linux-image-amd64"
        default_release=wheezy-backports
        install_recommends=no
        state=latest
        update-cache=yes
        cache_valid_time=3600

    - name: Docker apt repository key is set
      apt_key:
        keyserver=keyserver.ubuntu.com
        id=A88D21E9
        state=present

    - name: Docker apt repository is set
      apt_repository:
        repo='deb http://get.docker.io/ubuntu docker main'
        state=present
        update_cache=yes

    - name: Docker is installed
      apt:
        pkg=lxc-docker
        state=present
        update-cache=yes
        cache_valid_time=3600

    - name: Mesosphere packages installed
      apt:
        pkg="{{ item }}"
        state=present
      with_items:
        - mesos
        - haproxy

    - name: mesos zookeeper link configured
      template:
        src=templates/mesos_zk_conf.j2
        dest=/etc/mesos/zk
        owner=root
        group=root
        mode=0644
      notify: clean restart mesos-slave

    - name: mesos slaves - default configuration
      template:
        src=templates/mesos_slave_default.j2
        dest=/etc/default/mesos-slave
        owner=root
        group=root
        mode=0644
      notify: clean restart mesos-slave

    - name: mesos slaves - specific configuration
      template:
        src=templates/value_file.j2
        dest="/etc/mesos-slave/{{ item.key }}"
        owner=root
        group=root
        mode=0644
      with_items:
        - { key: "containerizers", value: "docker,mesos" }
        - { key: "executor_registration_timeout", value: "5mins" }
      notify: clean restart mesos-slave

    - name: mesosphere system services enabled
      service:
        name=mesos-slave
        enabled=yes
        state=started

    - name: mesosphere unused system services disabled
      service:
        name="{{ item }}"
        enabled=no
        state=stopped
      with_items:
        - mesos-master
        - zookeeper

    - name: haproxy bridge conf dir present
      file:
        path=/etc/haproxy-marathon-bridge
        state=directory
        owner=root
        group=root
        mode=0755

    - name: haproxy bridge deploy
      copy:
        src=files/haproxy-marathon-bridge
        dest=/root/haproxy-marathon-bridge
        owner=root
        group=root
        mode=0700
      notify:
        - deploy haproxy-bridge cron

    - name: haproxy bridge configuration
      template:
        src=templates/haproxy-marathon-bridge.conf.j2
        dest=/etc/haproxy-marathon-bridge/marathons
        owner=root
        group=root
        mode=0644
      notify:
        - deploy haproxy-bridge cron

    - name: haproxy system services enabled
      service:
        name=haproxy
        enabled=yes
        state=started




# HANDLER =================================================

  handlers:
    - name: clean restart mesos-slave
      file:
        path=/tmp/mesos
        state=absent
      notify: restart mesos-slave

    - name: restart mesos-slave
      service:
        name=mesos-slave
        state=restarted

    - name: deploy haproxy-bridge cron
      shell: /root/haproxy-marathon-bridge install_cronjob