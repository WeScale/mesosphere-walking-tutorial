---
- hosts: localhost
  gather_facts: false
  sudo: no

  vars_files:
    - "../variables.yml"

  tasks:
    - name: Local keypair exist
      stat:
        path="{{ ssh_private_key }}"
      register: localKey

    - name: New key not present => generation
      command: "ssh-keygen -t rsa -b 2048 -f {{ ssh_private_key }}"
      when: not localKey.stat.exists

    - name: Keypair is referenced
      local_action:
        module: ec2_key
        name: "{{ aws.keypair_label }}"
        key_material: "{{ item }}"
      with_file: ssh_public_key

    - name: Security group are created
      local_action:
        module: ec2_group
        name: "{{ item.security_group.name }}"
        description: "{{ item.security_group.description }}"
      with_items:
        - "{{ mesos.masters }}"
        - "{{ mesos.slaves }}"

    - name: Security group rules are applied
      local_action:
        module: ec2_group
        name: "{{ item.security_group.name }}"
        description: "{{ item.security_group.description }}"
        rules: "{{item.security_group.rules}}"
        rules_egress: "{{item.security_group.rules_egress}}"
      with_items:
        - "{{ mesos.masters }}"
        - "{{ mesos.slaves }}"

    - name: Spawing masters
      local_action:
        module: ec2
        id: "{{ item.cluster_role }}-{{ aws.idempotency_id }}"
        image: "{{ aws.ami.debian }}"
        wait: yes
        count: "{{ item.count }}"
        group: "{{ item.security_group.name }}"
        key_name: "{{ aws.keypair_label }}"
        instance_type: "{{ item.type }}"
        instance_tags:
          Name: "{{ aws.keypair_label }}_{{ item.cluster_role }}"
      register: "ec2masters"
      with_items:
        - "{{ mesos.masters }}"

    - name: Spawing slaves
      local_action:
        module: ec2
        id: "{{ item.cluster_role }}-{{ aws.idempotency_id }}"
        image: "{{ aws.ami.debian }}"
        wait: yes
        count: "{{ item.count }}"
        group: "{{ item.security_group.name }}"
        key_name: "{{ aws.keypair_label }}"
        instance_type: "{{ item.type }}"
        instance_tags:
          Name: "{{ aws.keypair_label }}_{{ item.cluster_role }}"
      register: "ec2slaves"
      with_items:
        - "{{ mesos.slaves }}"

    - name: Collecting infos about upper mesosphere
      local_action: add_host hostname={{ item.public_dns_name }} groupname=upper_mesosphere
      with_items: ec2masters.results[0].instances

    - name: Collecting infos about lower mesosphere
      local_action: add_host hostname={{ item.public_dns_name }} groupname=lower_mesosphere
      with_items: ec2slaves.results[0].instances

    - name: Host inventory for AWS infra is generated
      template:
        src=templates/ec2_inventory.j2
        dest=../ec2_inventory
